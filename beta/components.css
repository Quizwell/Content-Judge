/* Screen */
.screen {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: var(--page-background-color);
	box-shadow: 0 0 20px var(--dark-shadow-color);
	box-sizing: border-box;
	border: none;
	opacity: 100%;
	overflow: auto;
	padding: max(env(safe-area-inset-top), 20px) 20px 20px 20px;
	transition: opacity 0.2s ease-out, transform 0.2s ease-out;

	&.hidden {
		transform: translate(100px, 0);
		opacity: 0;
		overflow: hidden;
	}
}

.screen::before {
	content: "";
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	z-index: -1;
	pointer-events: none;
	padding-bottom: 56.25%;
	background-image: var(--gradient-url);
	background-size: 100% 100%;
	background-repeat: no-repeat;
	-webkit-mask-image: linear-gradient(to bottom, black 0%, transparent 100%), linear-gradient(to right, transparent 0%, black 100%);
	mask-image: linear-gradient(to bottom, black 0%, transparent 100%), linear-gradient(to right, transparent 0%, black 100%);
	-webkit-mask-composite: intersect;
	mask-composite: intersect;
	transform: translate3d(0, 0, 0); /* Fix flickering on iOS Safari */
}

@media only screen and (prefers-color-scheme: dark) {
	.screen:not(.floating)::before {
		background-image: url("images/gradient-dark.png");
	}
}

.screen > .header {
	position: fixed;
	top: max(env(safe-area-inset-top), 20px);
	left: 0;
	width: 100%;
	padding: 0 20px 0 20px;
	box-sizing: border-box;
	display: flex;
	align-items: center;
	gap: 10px;
	cursor: pointer;
	z-index: 2;

	svg {
		font-size: 25px;
	}

	h1 {
		font-size: 30px;
		font-weight: 800;
	}
}

.screen > .content {
	height: 100%;
	padding-top: 50px;
	box-sizing: border-box;
	overflow-y: auto;
	mask-image: linear-gradient(to bottom, transparent 0%, transparent 35px, black 50px, black calc(100% - 20px), transparent 100%);
	-ms-overflow-style: none;
	scrollbar-width: none;

	&::-webkit-scrollbar {
		display: none;
	}
}

/* BannerNotification */
.bannerNotification {
	position: fixed;
	left: 50%;
	top: max(15px, env(safe-area-inset-top) + 5px);
	transform: translate(-50%, 0);
	width: calc(100% - 40px);
	max-width: 250px;
	min-height: 60px;
	z-index: 10;
	border-radius: 30px;
	background-color: var(--page-background-color);
	box-shadow: 0 0 10px var(--light-shadow-color);
	transition: all 0.2s ease;

	&.hidden {
		display: block !important;
		transform: translate(-50%, -100px);
	}

	.icon {
		width: 60px;
		height: 60px;
		position: absolute;
		top: 0;
		left: 0;
		font-size: 20px;
		text-align: center;
		vertical-align: baseline;
		line-height: 60px;
	}

	.content {
		margin: 10px 20px 10px 55px;
		height: 100%;
		display: flex;
		flex-direction: column;
		justify-content: center;
	}

	.title {
		font-size: 18px;
		width: calc(100% - 10px);
	}

	.message {
		color: var(--ternary-text-color);
		width: fit-content;
	}
}

/* List */
.list {
	display: flex;
	flex-direction: column;
	gap: 5px;

	&.scrollable {
		overflow-y: auto;
		scrollbar-width: none;
		padding: 15px 0;
		mask-image: linear-gradient(to bottom, transparent 0%, black 20px, black calc(100% - 20px), transparent 100%);
	}
}

.list .sectionTitle {
	margin: 0 0 0 5px;
	font-size: 15px;

	&:not(:first-child) {
		margin-top: 10px;
	}
}

.list .listWrapper {
	display: flex;
	flex-direction: column;
	gap: 5px;
}

/* ListOptions */
.list .options {
	display: flex;
	align-items: center;
	gap: 10px;
	font-size: 17px;

	& > svg {
		font-size: 25px;
	}

	.iconContainer svg {
		transition: transform 0.1s ease;
	}

	.iconContainer.descending svg {
		transform: rotateX(180deg);
	}
}

.list .options .itemsWrapper {
	display: flex;
	gap: 5px;
	overflow-x: auto;
	margin-right: -20px;
}

.list .options .itemsWrapper .item,
.list .options .iconContainer {
	display: flex;
	white-space: nowrap;
	background: var(--content-background-color);
	padding: 8px 12px;
	border-radius: 100vh; /* Fully rounded sides */
	color: var(--item-color, inherit);
	cursor: pointer;
	transition: all 0.1s ease;
}

.list .options .itemsWrapper .item.enabled {
	background: var(--item-color, var(--app-accent-color));
	color: var(--accent-color-text-color);
}

.list .options .itemsWrapper .item svg {
	font-size: 20px;
	margin-right: 5px;
}

/* ListItem */
.list .listWrapper > .item {
	background: var(--content-background-color);
	min-height: 50px;
	border-radius: 25px;
	padding: 8px 20px;
	box-sizing: border-box;
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 12px;

	&.hidden {
		display: none !important;
	}
	&.callback {
		cursor: pointer;
		transition: all 0.1s ease;
		&:not([disabled]):active {
			background: var(--page-background-color);
		}
	}

	svg {
		width: 20px;
		font-size: 20px;
	}

	.leading {
		margin-right: auto;
		.title {
			font-weight: bold;
			color: var(--item-color, var(--primary-text-color));
		}
		.subtitle {
			color: var(--ternary-text-color);
			font-size: 14px;
		}
	}

	.trailing {
		font-weight: bold;
	}
}

/* NavigationLink */
.navigationLink {
	background: var(--link-color, var(--content-background-color));
	color: var(--link-text-color, var(--primary-text-color));
	height: 35px;
	font-size: 18px;
	border-radius: 15px;
	padding: 8px 15px;
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 12px;
	cursor: pointer;
	transition: opacity 0.2s ease;

	&.prominent {
		background-image: var(--gradient-url);
		background-repeat: no-repeat;
		background-position: center;
		background-size: 100% auto;
		color: white;
	}
	&.memory {
		background: var(--memory-element-gradient);
		color: white;
	}
	&:not([disabled]):active {
		opacity: 0.5;
	}

	svg {
		width: 20px;
		font-size: 20px;
	}

	.leading {
		margin-right: auto;
		.title {
			font-weight: 600;
		}
		.subtitle {
			font-weight: 500;
			opacity: 0.7;
			font-size: 14px;
		}
	}
}

/* Overlay */
.overlay {
	position: fixed;
	top: 0;
	left: 0;
	width: 100vw;
	height: 100vh;
	backdrop-filter: blur(10px);
	background: var(--overlay-background-color);
	transition: opacity 0.2s ease;

	&.dismissable {
		cursor: pointer;
	}
	&.hidden {
		opacity: 0;
	}
}

/* SearchOverlay */
.searchOverlay {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	max-height: 100vh;
	padding: max(env(safe-area-inset-top), 20px) 20px 20px 20px;
	box-sizing: border-box;
	display: flex;
	flex-direction: column;
	transition: opacity 0.2s ease, transform 0.2s ease;

	&.hidden {
		transform: translateY(-100px);
	}
}

.searchOverlay .header {
	flex-shrink: 0;
	display: grid;
	grid-template-columns: auto 1fr;
	align-items: center;
}

.searchOverlay .closeButton {
	height: 100%;
	width: 40px;
	display: flex;
	align-items: center;
	justify-content: flex-start;
	cursor: pointer;
	transition: opacity 0.1s ease;

	&:active {
		opacity: 0.5;
	}

	svg {
		font-size: 25px;
		color: var(--primary-text-color);
	}
}

.searchOverlay.loading .searchBarWrapper {
	animation: searchBarLoading 2s infinite;
}

@keyframes searchBarLoading {
	0% {
		background-position: center top;
	}
	50% {
		background-position: center bottom;
	}
	100% {
		background-position: center top;
	}
}

.searchOverlay .searchBarWrapper {
	background-image: var(--gradient-url);
	background-repeat: no-repeat;
	background-attachment: absolute;
	background-position: center;
	background-size: 100% auto;
	color: white;
	position: relative;
	display: flex;
	align-items: center;
	height: 30px;
	border-radius: 15px;
	font-size: 18px;
	padding: 8px 15px;
	overflow: hidden;
	transition: all 0.1s ease;

	svg {
		width: 20px;
		font-size: 20px;
	}

	input {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		border: none;
		background: transparent;
		font: inherit;
		color: inherit;
		padding: 0 46px;

		&::placeholder {
			color: white;
			opacity: 0.5;
		}

		&:placeholder-shown ~ .clearButton {
			opacity: 0;
			pointer-events: none;
		}

		&:focus {
			outline: none;
		}
	}

	.clearButton {
		position: absolute;
		top: 0;
		right: 0;
		width: 46px;
		height: 46px;
		border-radius: 0 10px 10px 0;
		display: flex;
		justify-content: center;
		align-items: center;
		cursor: pointer;
		transition: all 0.1s ease;

		&:active {
			opacity: 0.5;
		}
	}
}

.searchOverlay .list {
	transition: opacity 0.2s ease, transform 0.2s ease;

	&.hidden {
		transform: translateY(100px);
	}

	div.listWrapper > .item {
		background: var(--overlay-foreground-color);
		box-shadow: var(--page-background-color) 0 0 5px inset;
		opacity: 0;
		animation: listItemIn 0.2s ease forwards;
	}
}

/* Animate in each list item from the bottom */
@keyframes listItemIn {
	from {
		opacity: 0;
		transform: translateY(50px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

/* ReferenceSelector */
.referenceSelector.floating {
	min-width: min(400px, 80vw);
	max-width: calc(100vw - 20px);
	max-height: 80vh;
	position: fixed;
	top: 150px;
	left: 50%;
	transform: translate3d(-50%, 0, 0);
	transition: opacity 0.2s ease, top 0.3s ease;
}

.referenceSelector.floating.hidden {
	transition: opacity 0.2s ease;
}

.referenceSelector.floating .header {
	display: flex;
	align-items: center;
	justify-content: space-between;
}

.referenceSelector.floating .header h1 {
	font-weight: 900;
	font-size: 30px;
	white-space: nowrap;
}

.referenceSelector.floating .header > div {
	width: 40px;
	height: 40px;
	display: flex;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	font-size: 25px;
	transition: opacity 0.1s ease;

	&:active {
		opacity: 0.5;
	}
}

.referenceSelector.floating .book,
.referenceSelector.floating .smallGrid {
	position: absolute;
	top: 50px;
	width: 100%;
}

.referenceSelector .book {
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-template-rows: auto 1fr;
	gap: 10px;
	transition: opacity 0.2s ease;
}

.referenceSelector .book .item {
	position: relative;
	background-image: var(--gradient-url);
	background-repeat: no-repeat;
	background-attachment: fixed;
	background-position: center;
	background-size: 100vw 100vh;
	color: white;
	border-radius: 15px;
	padding: 8px 12px 10px 12px;
	cursor: pointer;
	transition: opacity 0.2s ease;
}

.referenceSelector .book .item:first-child:last-child {
	grid-column: 1 / -1;
}

.referenceSelector .book .item:active {
	opacity: 0.5;
}

.referenceSelector .book .item .abbreviation {
	font-size: 35px;
}

.referenceSelector .book .item svg {
	position: absolute;
	top: 10px;
	right: 10px;
	font-size: 30px;
}

.referenceSelector .verse div.memory {
	border: 2px solid var(--memory-element-color);
	background: rgba(100%, 100%, 100%, 0.8);
	color: var(--memory-element-color);
}

.referenceSelector .verse div.memory.start {
	text-decoration: underline;
}

.referenceSelector .smallGrid {
	box-sizing: border-box;
	background-image: var(--gradient-url);
	background-repeat: no-repeat;
	background-attachment: fixed;
	background-position: center;
	background-size: 100% 100%;
	color: white;
	display: grid;
	grid-template-columns: repeat(5, 50px);
	grid-template-rows: auto;
	justify-content: center;
	gap: 10px;
	border-radius: 15px;
	padding: 10px 12px 12px 12px;
	transition: opacity 0.2s ease;
	overflow-y: auto;
}

.referenceSelector .smallGrid div {
	background: rgba(100%, 100%, 100%, 0.4);
	color: white;
	aspect-ratio: 1;
	border-radius: 5px;
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: 20px;
	font-weight: bold;
	cursor: pointer;
	transition: all 0.1s ease;
}

.referenceSelector .smallGrid div:active {
	opacity: 0.8;
}

/* VerseDisplay */
.verseDisplay {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	font-size: 18px;
	font-weight: 400;
	margin: 10px 0;
	/* transition: font-size 0.2s ease, font-weight 0.2s ease, line-height 0.2s ease; */
}

.verseDisplay.selectable {
	font-size: 20px;
	font-weight: 600;
	line-height: 1.5;
	transform: translate3d(0, 0, 0);
}

.verseDisplay .word:not(:last-child)::after {
	content: " ";
	display: inline-block;
	white-space: pre;
}

.verseDisplay.showPrejump .prejump {
	text-decoration: underline 2px solid var(--memory-element-color);
}

.verseDisplay .prejump::after {
	text-decoration: inherit;
}

/* I ain't commenting allat */
/* Good luck */

.verseDisplay.selectable .word:has(.selectable) {
	cursor: pointer;
}

.verseDisplay.selectable .word {
	position: relative;
}

.verseDisplay.selectable .word.multiselected .selectable {
	opacity: 1 !important;
	transition: opacity 0.1s ease;
}

.verseDisplay.selectable .word .selectable {
	position: relative;
	transition: color 0.2s ease, opacity 0.1s ease;
}

.verseDisplay.selectable .word::before,
.verseDisplay.selectable .word .selectable::before {
	content: " ";
	display: block;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 100%;
	height: 25px;
	z-index: -1;
	border-radius: 5px;
	background: var(--app-accent-color);
	padding: 1px 2.5px;
	opacity: 0;
}

.verseDisplay.selectable .word::before {
	transition: border-radius 0.2s ease;
}

.verseDisplay.selectable .word .selectable::before {
	transition: opacity 0.2s ease;
}

.verseDisplay.selectable .word.multiselected::before {
	border-radius: 0;
	transform: translate(calc(-50% - 2.5px), -50%);
}
.verseDisplay.selectable .word.multiselected.start::before {
	border-top-left-radius: 5px;
	border-bottom-left-radius: 5px;
}
.verseDisplay.selectable .word.multiselected.end::before {
	border-top-right-radius: 5px;
	border-bottom-right-radius: 5px;
}

.verseDisplay.selectable .word.multiselected,
.verseDisplay.selectable .word.selected .selectable {
	color: var(--accent-color-text-color);
	opacity: 1 !important;
}

.verseDisplay.selectable .word.multiselected::before,
.verseDisplay.selectable .word.selected .selectable::before {
	opacity: 1;
}

.verseDisplay.selectable .prejump.selected::after {
	opacity: 0 !important;
}

.verseDisplay.selectable .word.selected .selectable.unique,
.verseDisplay.selectable .word.selected .selectable.double,
.verseDisplay.selectable .word.selected .selectable.triple {
	color: white;
}

.verseDisplay.selectable .word.selected .selectable.unique::before {
	background: var(--unique-word-highlight-color);
}
.verseDisplay.selectable .word.selected .selectable.double::before {
	background: var(--double-word-highlight-color);
}
.verseDisplay.selectable .word.selected .selectable.triple::before {
	background: var(--triple-word-highlight-color);
}

.verseDisplay.selectable .prejump::after,
.verseDisplay.selectable .word .footnote {
	transition: opacity 0.1s ease;
}

@media (hover: hover) {
	/* When hovering over the word or adjacent punctuation, highlight the word */
	.verseDisplay.selectable .word:not(:has(.footnote:hover)):hover .selectable,
	.verseDisplay.selectable .prejump:not(:has(.footnote:hover)):not(.multiselected):hover::after {
		opacity: 0.5;
	}

	/* When hovering over a footnote, highlight the footnote */
	.verseDisplay.selectable .word .footnote:hover {
		opacity: 0.5;
	}
}

.verseDisplay.showRareWords .unique {
	color: var(--unique-word-highlight-color);
}
.verseDisplay.showRareWords .double {
	color: var(--double-word-highlight-color);
}
.verseDisplay.showRareWords .triple {
	color: var(--triple-word-highlight-color);
}

/* ChapterDisplay */
.chapterDisplay {
	padding: 0;
}

.chapterDisplay .header {
	position: fixed;
	top: max(env(safe-area-inset-top), 20px);
	left: 0;
	width: 100%;
	padding: 0 20px 0 20px;
	box-sizing: border-box;
	display: flex;
	justify-content: space-between;
	transition: opacity 0.2s ease;
}

.chapterDisplay .header svg {
	font-size: 25px;
}

.chapterDisplay .header .leading .title {
	display: flex;
	align-items: center;
	justify-content: flex-start;
	gap: 10px;
	cursor: pointer;
}

.chapterDisplay .header .leading .title h1 {
	font-weight: 900;
}

.chapterDisplay .header .leading .memory {
	display: flex;
	align-items: center;
	justify-content: flex-start;
	gap: 3px;
	margin-left: 5px;
	font-size: 20px;
	font-weight: 600;
	transition: opacity 0.2s ease;
}

.chapterDisplay .header .leading .memory svg {
	color: var(--memory-element-color);
	font-size: 18px;
}

.chapterDisplay .header .trailing {
	display: flex;
	align-items: flex-start;
	justify-content: center;
}

.chapterDisplay .header .trailing div {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 40px;
	height: 40px;
	cursor: pointer;
}

.chapterDisplay .header .trailing div svg {
	font-size: 30px;
}

.chapterDisplay .verses {
	counter-reset: verseNumber;
	height: 100%;
	padding: calc(max(env(safe-area-inset-top), 20px) + 70px) 20px 20px 40px;
	box-sizing: border-box;
	overflow-y: auto;
	/* mask-image: linear-gradient(to bottom, transparent 0%, transparent 75px, black 100px, black calc(100% - 20px), transparent 100%); */
	mask-image: linear-gradient(
		to bottom,
		transparent 0%,
		transparent calc(55px + max(env(safe-area-inset-top), 20px)),
		black calc(80px + max(env(safe-area-inset-top), 20px)),
		black calc(100% - 60px),
		transparent calc(100% - 40px),
		transparent 100%
	);
	padding-bottom: 50vh;
}

.chapterDisplay .verses:not(:has(~ .panel.hidden)) {
	mask-image: linear-gradient(
		to bottom,
		transparent 0%,
		transparent calc(55px + max(env(safe-area-inset-top), 20px)),
		black calc(80px + max(env(safe-area-inset-top), 20px)),
		black calc(100% - 120px),
		transparent calc(100% - 100px),
		transparent 100%
	);
	padding-bottom: calc(100vh - 100px);
}

.chapterDisplay.allowVerseSelection .verses .verseDisplay:not(.selectable) {
	cursor: pointer;
	transition: opacity 0.2s ease;
}

.chapterDisplay .sectionTitle {
	font-size: 18px;
	font-weight: 800;
	transition: opacity 0.2s ease;
}

.chapterDisplay .verses .verseDisplay {
	position: relative;
}

.chapterDisplay .verses .verseDisplay::before {
	content: counter(verseNumber);
	counter-increment: verseNumber;
	position: absolute;
	transform: translateX(calc(-100%));
	width: 35px;
	padding-right: 5px;
	text-align: right;
	font-weight: 600;
	font-variant-numeric: tabular-nums;
	opacity: 0.5;
	pointer-events: none;
}

.chapterDisplay.allowVerseSelection .verses:has(> .selectable) .verseDisplay:not(.selectable),
.chapterDisplay.allowVerseSelection .verses:has(> .selectable) .sectionTitle {
	opacity: 0.25;
}

.chapterDisplay .footer {
	position: fixed;
	bottom: 0;
	left: 0;
	width: 100%;
	padding: 0 20px 20px 20px;
	box-sizing: border-box;
	display: flex;
	justify-content: space-between;
	transition: opacity 0.3s ease, transform 0.3s ease;
}

.chapterDisplay .footer.hidden {
	transform: translateY(100%);
}

.chapterDisplay .footer svg {
	font-size: 20px;
}

.chapterDisplay .footer div {
	background: var(--content-background-color);
	height: 40px;
	border-radius: 20px;
	padding: 0 15px;
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 10px;
	cursor: pointer;
	transition: background-color 0.1s ease, color 0.1s ease;
}

.chapterDisplay .footer div.active {
	background: var(--app-accent-color);
	color: var(--accent-color-text-color);
}

.chapterDisplay .panel {
	position: fixed;
	bottom: 80px;
	width: 100%;
	display: flex;
	flex-direction: column;
	padding: 0 20px;
	box-sizing: border-box;
	background: var(--page-background-color);
	transition: opacity 0.2s ease, height 0.3s ease;
}

.chapterDisplay .panel::before {
	content: "";
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 30px;
	background: var(--page-background-color);
	-webkit-mask-image: linear-gradient(to bottom, transparent 0%, black 100%);
	mask-image: linear-gradient(to bottom, transparent 0%, black 100%);
	pointer-events: none;
	transform: translateY(-30px);
}

.chapterDisplay .panel h1 {
	font-weight: 700;
	font-size: 30px;
	text-align: center;
}

.chapterDisplay .panel .content {
	height: 100%;
	overflow-y: auto;
	-webkit-mask-image: linear-gradient(to bottom, transparent 0%, black 20px, black calc(100% - 20px), transparent 100%);
	mask-image: linear-gradient(to bottom, transparent 0%, black 20px, black calc(100% - 20px), transparent 100%);
}
